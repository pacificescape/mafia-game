{"version":3,"sources":["hooks/withTheme.js","utils/variables/index.js","utils/mixins/index.js","components/Button/Button.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Input/Input.jsx","components/Label/Label.jsx","components/Layout/Layout.jsx","components/LoginPopup/LoginPopup.jsx","assets/icons/MAFIA.svg","components/Logo/Logo.jsx","assets/img/main-page-2-bg.png","components/Main/Main.jsx","assets/icons/remove-gray.svg","components/Popup/Popup.jsx","hooks/useClickOutside.js","components/RegisterPopup/RegisterPopup.jsx","components/Rules/Rules.jsx","components/UserList/UserList.jsx","components/Chat/Chat.jsx","components/Lobby/GameInLobby.jsx","redux/reducers/game_reducer.js","components/Lobby/Lobby.jsx","api/api.js","redux/reducers/chat_reducer.js","redux/reducers/chat_selectors.js","components/Chat/ChatContainer.jsx","pages/Home/Home.jsx","pages/404/404.jsx","pages/GameRules/GameRules.jsx","pages/WatchGame/WatchGame.jsx","pages/Contacts/Contacts.jsx","pages/ForgottenPassword/ForgottenPassword.jsx","pages/Game/Game.jsx","pages/CurrentGames/CurrentGames.jsx","pages/GameLobby/GameLobby.jsx","App.jsx","reportWebVitals.js","redux/reducers/auth_reducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["palette","common","black","white","background","paper","default","primary","light","main","dark","contrastText","secondary","error","text","disabled","hint","withTheme","WrappedComponent","props","theme","type","createMuiTheme","createTheme","useSelector","state","Game","StylesProvider","injectFirst","colors","breakpoints","xs","sm","md","lg","lessThen","Object","keys","reduce","a","l","css","buttonReset","Button","popupOptions","popup","setPopup","children","ButtonWrapper","CustomButton","onClick","crimson","styled","div","button","Header","console","log","useState","Wrapper","display","gap","flexWrap","alignItems","justifyContent","Container","HeaderLink","NavLink","textDecoration","color","fontWeight","RegLink","to","activeClassName","active","toggle","HeaderContainer","Input","CustomInput","middlegray","input","lightgray","label","Layout","LoginPopup","ModalTitle","ModalForm","ModalFormItem","ModalFormLabel","form","Logo","size","LogoWrapper","src","TitleLogo","alt","Main","Background","BgImg","Online","Popup","ref","useRef","handler","useEffect","listener","event","current","contains","target","document","addEventListener","removeEventListener","useClickOutside","Modal","ModalClose","CloseIcon","darkgray","RegisterPopup","Label","Rules","RulesContainer","RulesTitle","RulesList","RulesItem","Typography","variant","RulesItemText","ListItemPar","ul","li","p","UserList","data","avatar","name","count","isMafia","StyledText","length","StyledList","List","map","item","ListItem","StyledListItem","Avatar","shape","icon","ListItemText","Badge","showZero","filter","ChatMessagesComponent","chatMessages","ChatMessages","user","ChatItem","ChatItemMessage","ChatItemMessageInfo","ChatItemMessageCtrl","likes","dislikes","ChatItemMessageDate","messageTime","id","Chat","addMessage","messageValue","changeMessage","sendMessage","ChatWrapper","Tab","title","key","closable","content","TabPanel","tab","ChatMoves","ChatForm","TextField","fullWidth","value","onChange","onKeyPress","shiftKey","preventDefault","FirstLine","Date","span","Title","MaxPlayers","IconWrapper","game","date","getDate","getMonth","getHours","getMinutes","players","LinearProgress","valueBuffer","SET_IS_FETCHING","SET_GAMES_LIST","getInitialGame","Math","random","slice","status","initialState","lobby","currentGame","setGamesList","payload","setIsFetching","isFetching","sleep","ms","Promise","r","setTimeout","gameReducer","action","query","gql","width","margin","TitleWrapper","padding","Lobby","dispatch","useDispatch","useQuery","loading","getGamesList","useCallback","groupId","games","Array","fill","dense","divider","messages","v","time","axios","create","baseURL","chatAPI","chatMessagesData","SET_CHAT_MESSAGES","ADD_MESSAGE","setChatMessages","chatReducer","message","getChatMessages","connect","getChatMessagesThunk","HomePage","Page404","GameRulesPage","WatchGamePage","ContactsPage","Box","textAlign","fontSize","Link","href","ForgottenPasswordPage","GamePage","GameRoom","CurrentGamesPage","client","ApolloClient","uri","cache","InMemoryCache","Paper","square","exact","path","component","GameLobby","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SET_USER_DATA","SET_IS_AUTH","userId","email","login","isAuth","captcha","authReducer","combineReducers","Auth","gamesReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d13ced2b.chunk.js","sourcesContent":["import { useSelector } from 'react-redux';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport { StylesProvider } from '@material-ui/core/styles';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\n\nlet palette = {\n  common: {\n    black: 'rgba(50, 50, 50, 1)',\n    white: 'rgba(255, 255, 255, 1)',\n  },\n  background: {\n    paper: 'rgba(37, 37, 37, 1)',\n    default: 'rgba(48, 48, 48, 1)',\n  },\n  primary: {\n    light: 'rgba(203, 121, 121, 1)',\n    main: 'rgba(181, 63, 63, 1)',\n    dark: 'rgba(159, 48, 48, 1)',\n    contrastText: 'rgba(217, 217, 217, 1)',\n  },\n  secondary: {\n    light: 'rgba(41, 188, 93, 1)',\n    main: 'rgba(70, 134, 94, 1)',\n    dark: 'rgba(16, 150, 75, 1)',\n    contrastText: 'rgba(211, 211, 211, 1)',\n  },\n  error: {\n    light: '#e57373',\n    main: '#f44336',\n    dark: '#d32f2f',\n    contrastText: 'rgba(199, 199, 199, 1)',\n  },\n  text: {\n    primary: 'rgba(180, 180, 180, 0.87)',\n    secondary: 'rgba(189, 189, 189, 0.54)',\n    disabled: 'rgba(167, 167, 167, 0.69)',\n    hint: 'rgba(202, 202, 202, 0.38)',\n  },\n};\n\nfunction createTheme(type = 'dark') {\n  return createMuiTheme({\n    palette: {\n      ...palette,\n      type,\n    },\n  });\n}\n\nfunction withTheme(WrappedComponent) {\n  const ThemeWrapper = props => {\n    const { type } = useSelector(state => state.Game.theme);\n    const theme = createTheme(type);\n\n    return (\n      <StylesProvider injectFirst={true}>\n        <MuiThemeProvider theme={theme}>\n          <WrappedComponent {...props} />\n        </MuiThemeProvider>\n      </StylesProvider>\n    );\n  };\n  return ThemeWrapper;\n}\n\nexport default withTheme;\n","export const colors = {\n  white: '#ffffff',\n  whitesmoke: '#f4f4f4',\n  black: '#000000',\n  crimson: '#af0000',\n  red: '#ff0000',\n  darkgray: '#292929',\n  middlegray: '#373737',\n  lightgray: '#979797',\n  sand: '#fce4ac',\n};\n\nexport const transitions = {};\n","import { css } from 'styled-components';\nimport { colors } from '../variables';\n\nconst breakpoints = {\n  xs: '480px',\n  sm: '768px',\n  md: '992px',\n  lg: '1200px',\n};\n\nexport const lessThen = Object.keys(breakpoints).reduce((a, l) => {\n  a[l] = (...args) => css`\n    @media (max-width: ${breakpoints[l]}) {\n      ${css(...args)};\n    }\n  `;\n  return a;\n}, {});\n\nexport const moreThen = Object.keys(breakpoints).reduce((a, l) => {\n  a[l] = (...args) => css`\n    @media (min-width: ${breakpoints[l]}) {\n      ${css(...args)};\n    }\n  `;\n  return a;\n}, {});\n\nexport const buttonReset = () => {\n  return css`\n    color: ${colors.white};\n    border: none;\n    cursor: pointer;\n  `;\n};\n","import styled from 'styled-components';\n\n// === utils ===\nimport { colors } from 'src/utils/variables';\nimport { buttonReset } from 'src/utils/mixins';\n\nconst Button = ({\n  popupOptions = {\n    popup: false,\n    setPopup: () => {},\n  },\n  children = 'войти',\n}) => {\n  const { setPopup } = popupOptions;\n\n  return (\n    <ButtonWrapper>\n      <CustomButton onClick={() => setPopup(true)}>{children}</CustomButton>\n    </ButtonWrapper>\n  );\n};\n\nexport default Button;\n\nconst { white, crimson } = colors;\n\nconst ButtonWrapper = styled.div`\n  margin: 0 auto;\n  width: fit-content;\n`;\n\nconst CustomButton = styled.button`\n  ${buttonReset()}\n\n  padding: 10px 30px;\n  border-radius: 4px;\n  color: ${white};\n  background-color: ${crimson};\n  text-transform: uppercase;\n  font-weight: 900;\n\n  :hover {\n    cursor: pointer;\n  }\n`;\n","import { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { styled } from '@material-ui/core/styles';\n\n// === components ===\nimport { Layout, RegisterPopup } from 'src/components';\n\nconst Header = props => {\n  console.log(props);\n  const [popup, setPopup] = useState(false);\n\n  const Wrapper = styled('header')({\n    display: 'flex',\n    gap: '2em',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  });\n\n  const Container = styled('div')({\n    display: 'flex',\n    flexWrap: 'wrap',\n    gap: '2em',\n  });\n\n  const HeaderLink = styled(NavLink)(({ theme }) => {\n    return {\n      textDecoration: 'none',\n      '&:link': {\n        textDecoration: 'none',\n      },\n      '&:hover': {\n        textDecoration: 'none',\n        color: theme.palette.primary.main,\n      },\n      '&:visited': {\n        textDecoration: 'none',\n      },\n      '&.active': {\n        color: theme.palette.primary.main,\n        textDecoration: 'none',\n        fontWeight: 400,\n      },\n    };\n  });\n\n  const RegLink = styled('a')(({ theme }) => {\n    return {\n      '&:hover': {\n        textDecoration: 'none',\n        color: theme.palette.secondary.main,\n      },\n    };\n  });\n\n  return (\n    <Layout>\n      <Wrapper>\n        <Container>\n          <HeaderLink to=\"game-rules\" activeClassName=\"active\">\n            Правила\n          </HeaderLink>\n          <HeaderLink to=\"watch-game\" activeClassName=\"active\">\n            Посмотреть игру\n          </HeaderLink>\n          <HeaderLink to=\"lobby\" activeClassName=\"active\">\n            Лобби\n          </HeaderLink>\n          <HeaderLink to=\"contacts\" activeClassName=\"active\">\n            Контакты\n          </HeaderLink>\n        </Container>\n        <Container>\n          <RegisterPopup active={popup} toggle={() => setPopup(false)} />\n          <RegLink onClick={() => setPopup(true)}>Регистрация</RegLink>\n          <HeaderLink to=\"forgotten-password\" activeClassName=\"active\">\n            Забыли пароль?\n          </HeaderLink>\n        </Container>\n      </Wrapper>\n    </Layout>\n  );\n};\n\nexport default Header;\n","import Header from './Header';\n// Тут место для оберток и логике, не относящейся напрямую к компоненте Header (например редиректы и тд).\nconst HeaderContainer = () => {\n  return <Header />;\n};\n\nexport default HeaderContainer;\n","import styled from 'styled-components';\n// === utils ===\nimport { colors } from 'src/utils/variables';\n\nconst Input = props => {\n  return <CustomInput {...props} />;\n};\n\nexport default Input;\n\nconst { white, middlegray } = colors;\n\nconst CustomInput = styled.input`\n  color: ${white};\n  padding: 22px 16px 10px;\n\n  width: 100%;\n  background-color: ${middlegray};\n  border: none;\n  border-bottom: 1px solid ${white};\n  border-radius: 4px 4px 0 0;\n`;\n","import styled from 'styled-components';\n\n// === utils ===\nimport { colors } from 'src/utils/variables';\n\nconst Label = ({ children }) => {\n  return <CustomLabel>{children}</CustomLabel>;\n};\n\nexport default Label;\n\nconst { lightgray } = colors;\n\nconst CustomLabel = styled.label`\n  display: block;\n  text-align: left;\n  color: ${lightgray};\n`;\n","import styled from 'styled-components';\n\nconst Layout = ({ children }) => {\n  return <Wrapper>{children}</Wrapper>;\n};\n\nexport default Layout;\n\nconst Wrapper = styled.div`\n  max-width: 1440px;\n  margin: 0 auto;\n  padding: 2em 5%;\n`;\n","import styled from 'styled-components';\n\n// === components ===\nimport { Button, Input, Popup } from 'src/components';\n\n// === utils ===\nimport { colors } from 'src/utils/variables';\n\nconst LoginPopup = ({ active, toggle }) => {\n  return (\n    <Popup {...{ active, toggle }}>\n      <ModalTitle>Вход</ModalTitle>\n      <ModalForm>\n        <ModalFormItem>\n          <ModalFormLabel>Логин</ModalFormLabel>\n          <Input type=\"text\" />\n        </ModalFormItem>\n\n        <ModalFormItem>\n          <ModalFormLabel>Пароль</ModalFormLabel>\n          <Input type=\"password\" />\n        </ModalFormItem>\n\n        <Button>войти</Button>\n      </ModalForm>\n    </Popup>\n  );\n};\n\nexport default LoginPopup;\n\nconst { lightgray } = colors;\n\nconst ModalTitle = styled.div`\n  font-size: 3rem;\n  text-align: center;\n`;\n\nconst ModalForm = styled.form`\n  display: flex;\n  gap: 2em;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 2em;\n\n  input {\n    margin-top: 0.5em;\n  }\n`;\n\nconst ModalFormLabel = styled.label`\n  display: block;\n  text-align: left;\n  color: ${lightgray};\n`;\n\nconst ModalFormItem = styled.div`\n  text-align: center;\n  width: 100%;\n`;\n","export default __webpack_public_path__ + \"static/media/MAFIA.f4ee44b4.svg\";","import styled from 'styled-components';\n\n// === assets ===\nimport TitleLogo from 'src/assets/icons/MAFIA.svg';\n\nconst Logo = ({ size }) => {\n  return (\n    <LogoWrapper size={size}>\n      <img src={TitleLogo} alt=\"Mafia logo\" />\n    </LogoWrapper>\n  );\n};\n\nexport default Logo;\n\nconst LogoWrapper = styled.div`\n  width: 100%;\n  height: auto;\n  margin: 0 auto;\n  max-width: ${({ size }) => size};\n\n  img {\n    width: 100%;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/main-page-2-bg.f6d30a1e.png\";","import { useState } from 'react';\nimport styled from 'styled-components';\n\n// === assets ===\nimport BgImg from 'src/assets/img/main-page-2-bg.png';\n\n// === components ===\nimport { Button, LoginPopup, Logo } from 'src/components';\n\nconst Main = () => {\n  const [popup, setPopup] = useState(false);\n\n  return (\n    <>\n      <Background>\n        <img src={BgImg} alt=\"\" />\n      </Background>\n      <Container>\n        <Logo />\n        <Online>online</Online>\n        <LoginPopup active={popup} toggle={() => setPopup(false)} />\n        <Button popupOptions={{ popup, setPopup }}>войти</Button>\n      </Container>\n    </>\n  );\n};\n\nexport default Main;\n\nconst Background = styled.div`\n  display: flex;\n  justify-content: center;\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  z-index: -10;\n  overflow: hidden;\n\n  img {\n    height: 100vh;\n  }\n`;\n\nconst Container = styled.main`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  max-width: 500px;\n  min-width: 320px;\n  text-align: center;\n`;\n\nconst Online = styled.div`\n  font-weight: 300;\n  font-size: 2rem;\n  margin-bottom: 1em;\n`;\n","export default __webpack_public_path__ + \"static/media/remove-gray.a9540d42.svg\";","import { useRef } from 'react';\nimport styled from 'styled-components';\n\n// === assets ===\nimport CloseIcon from 'src/assets/icons/remove-gray.svg';\n\n// === utils ===\nimport { useClickOutside } from 'src/hooks/useClickOutside';\nimport { buttonReset, lessThen } from 'src/utils/mixins';\nimport { colors } from 'src/utils/variables';\n\nconst Popup = ({ children, active, toggle }) => {\n  const ref = useRef();\n  useClickOutside(ref, toggle);\n\n  return (\n    <Container active={active}>\n      <Modal ref={ref}>\n        <ModalClose>\n          <button onClick={toggle}>\n            <img src={CloseIcon} alt=\"\" />\n          </button>\n        </ModalClose>\n        {children}\n      </Modal>\n    </Container>\n  );\n};\n\nexport default Popup;\n\nconst { white, darkgray } = colors;\n\nconst Container = styled.div`\n  display: ${props => (props.active ? 'block' : 'none')};\n  position: absolute;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  color: ${white};\n`;\n\nconst Modal = styled.div`\n  margin: auto;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 80%;\n  max-width: 800px;\n  background-color: ${darkgray};\n  padding: 1em 2em;\n\n  ${lessThen.sm`\n    width: 90%;\n  `}\n`;\n\nconst ModalClose = styled.div`\n  text-align: right;\n\n  button {\n    ${buttonReset};\n    background-color: transparent;\n\n    img {\n      transform: scale(0.8);\n    }\n  }\n`;\n","import { useEffect } from 'react';\n\nexport function useClickOutside(ref, handler) {\n  useEffect(() => {\n    const listener = event => {\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [ref, handler]);\n}\n","import styled from 'styled-components';\n\n// === components ===\nimport { Button, Input, Popup } from 'src/components';\n\n// === utils ===\nimport { colors } from 'src/utils/variables';\n\nconst RegisterPopup = ({ active, toggle }) => {\n  return (\n    <Popup {...{ active, toggle }}>\n      <ModalTitle>Регистрация</ModalTitle>\n      <ModalForm>\n        <ModalFormItem>\n          <Label>Имя</Label>\n          <Input type=\"text\" />\n        </ModalFormItem>\n\n        <ModalFormItem>\n          <Label>Email</Label>\n          <Input type=\"text\" />\n        </ModalFormItem>\n\n        <ModalFormItem>\n          <Label>Логин</Label>\n          <Input type=\"text\" />\n        </ModalFormItem>\n\n        <ModalFormItem>\n          <Label>Пароль</Label>\n          <Input type=\"password\" />\n        </ModalFormItem>\n        <Button>регистрация</Button>\n      </ModalForm>\n    </Popup>\n  );\n};\n\nexport default RegisterPopup;\n\nconst { lightgray } = colors;\n\nconst ModalTitle = styled.div`\n  font-size: 3rem;\n  text-align: center;\n`;\n\nconst ModalForm = styled.form`\n  display: flex;\n  gap: 2em;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 2em;\n\n  input {\n    margin-top: 0.5em;\n  }\n`;\n\nconst Label = styled.label`\n  display: block;\n  text-align: left;\n  color: ${lightgray};\n`;\n\nconst ModalFormItem = styled.div`\n  text-align: center;\n  width: 100%;\n`;\n","import styled from 'styled-components';\n\n// === components ===\nimport { Layout } from 'src/components';\nimport { Typography } from '@material-ui/core';\n\nconst Rules = () => {\n  return (\n    <Layout>\n      <RulesContainer>\n        <RulesTitle>Правила</RulesTitle>\n        <RulesList>\n          <RulesItem>\n            <Typography variant=\"h5\" color=\"primary\">\n              Как общаться с другими игроками?\n            </Typography>\n\n            <RulesItemText>\n              Если нажать на чей-то ник, то можно написать сообщение,\n              адресованное именно ему, но доступное для чтения всем остальным\n              присутствующим на улице. Если нажать на конверт, то сообщение\n              будет приватным и окажется видным только Вам и адресату.\n            </RulesItemText>\n          </RulesItem>\n\n          <RulesItem>\n            <Typography variant=\"h5\" color=\"primary\">\n              Как начать игру?\n            </Typography>\n\n            <RulesItemText>\n              На главной странице можно создать партию самому, нажав кнопку\n              «Создать». Либо же присоединиться к уже созданной заявке, нажав на\n              красный крест справа от заявки. Игра начинается с того момента,\n              когда наберётся указанное максимальное количество игроков, либо же\n              истечёт время ожидания, а игроков в заявке будет 7 или более.\n            </RulesItemText>\n          </RulesItem>\n\n          <RulesItem>\n            <Typography variant=\"h5\" color=\"primary\">\n              Как проходит игра?\n            </Typography>\n\n            <RulesItemText>\n              Первые две минуты игры уходят на то, чтоб мафия могла обсудить\n              план действий. Далее игра приобретает циклический характер: День:\n              <ListItemPar>\n                — Голосование, выбор посадки (днём честные жители, во время\n                обсуждения, пытаются вычислить, кто в игре — мафия, и путём\n                голосования выбирают, кого посадить в тюрьму)\n              </ListItemPar>\n              Ночь:\n              <ListItemPar>\n                — Ход комиссара (комиссар может проверить любого игрока и узнать\n                его настоящую роль, а ночью мафия убивает честных жителей)\n              </ListItemPar>\n              <ListItemPar>\n                — Ход мафии (чтобы убить честного жителя, мафия должна\n                консолидированно проголосовать за одного и того же игрока)\n              </ListItemPar>\n              Игра продолжается до тех пор, пока в городе не останутся только\n              честные жители или мафиози.\n            </RulesItemText>\n          </RulesItem>\n\n          <RulesItem>\n            <Typography variant=\"h5\" color=\"primary\">\n              Какие роли есть в игре?\n            </Typography>\n\n            <RulesItemText>\n              После начала партии случайным образом происходит распределение\n              ролей. Выбор ролей ограничивается тремя: комиссар, мафия и честный\n              человек.\n            </RulesItemText>\n          </RulesItem>\n\n          <RulesItem>\n            <Typography variant=\"h5\" color=\"primary\">\n              Комиссар (ком, шериф)\n            </Typography>\n\n            <RulesItemText>\n              Комиссар в свой ход может узнать роль любого другого игрока. А\n              затем известить о своей проверке всех остальных. Если комиссар\n              оказывается под угрозой посадки, то он должен огласить свою роль.\n              Комиссар играет за честных жителей.\n            </RulesItemText>\n          </RulesItem>\n\n          <RulesItem>\n            <Typography variant=\"h5\" color=\"primary\">\n              Честный человек (чиж, мир)\n            </Typography>\n\n            <RulesItemText>\n              Знает только свою роль. Должен помнить, что в игре есть комиссар,\n              словам которого можно доверять.\n            </RulesItemText>\n          </RulesItem>\n\n          <RulesItem>\n            <Typography variant=\"h5\" color=\"primary\">\n              Мафия\n            </Typography>\n\n            <RulesItemText>\n              Мафия видит свою роль и роль напарника. В первые две минуты у них\n              есть возможность обсудить план на игру с помощью приватных\n              сообщений. Ночью для убийства необходимо, чтоб каждый мафиози\n              выбрал одну и ту же жертву.\n            </RulesItemText>\n          </RulesItem>\n\n          <RulesItem>\n            <Typography variant=\"h5\" color=\"primary\">\n              Задача в игре\n            </Typography>\n\n            <RulesItemText>\n              Для мафии — убить всех честных жителей, для честных жителей —\n              посадить всю мафию в тюрьму. Игра продолжается до тех пор, пока в\n              городе не останутся только честные жители или мафиози.\n            </RulesItemText>\n          </RulesItem>\n        </RulesList>\n      </RulesContainer>\n    </Layout>\n  );\n};\n\nexport default Rules;\n\nconst RulesContainer = styled.div``;\n\nconst RulesTitle = styled.div`\n  font-size: 3em;\n  text-align: center;\n`;\n\nconst RulesList = styled.ul`\n  margin-top: 2em;\n  display: flex;\n  flex-direction: column;\n  gap: 3em;\n`;\n\nconst RulesItem = styled.li`\n  list-style-type: none;\n`;\n\nconst ListItemPar = styled.p`\n  margin-left: 10px;\n`;\n\n// const Typography = styled.div`\n//   font-size: 1.5rem;\n//   font-weight: 500;\n//   color: ${red};\n//   line-height: 146%;\n// `;\n\nconst RulesItemText = styled.div`\n  font-size: 1rem;\n  line-height: 146%;\n`;\n","import styled from 'styled-components';\n\n// === ui ===\nimport { List, ListItem, Avatar, Badge, Typography } from '@material-ui/core';\nimport PermIdentityOutlinedIcon from '@material-ui/icons/PermIdentityOutlined';\n\nconst UserList = () => {\n  const data = [\n    { avatar: '', name: 'Den Ri', count: 2, isMafia: true },\n    { avatar: '', name: 'Зомби Ich bin Roboter🧟‍♂️', count: 4, isMafia: false },\n    { avatar: '', name: 'Aleksandr', count: 11, isMafia: false },\n    { avatar: '', name: 'Nikita Chaykin', count: 0, isMafia: false },\n    { avatar: '', name: 'Foma', count: 0, isMafia: false },\n    { avatar: '', name: 'Lupusregina[beta]', count: 0, isMafia: true },\n    { avatar: '', name: 'Dj Лимончик ) 🦇 🐓 🍑', count: 0, isMafia: false },\n    { avatar: '', name: 'Евдоким', count: 0, isMafia: false },\n    { avatar: '', name: 'bakunov', count: 0, isMafia: false },\n    { avatar: '', name: 'Alex Kovalev', count: 0, isMafia: false },\n  ];\n\n  const countMafia = () => data.filter(({ isMafia }) => isMafia).length;\n\n  return (\n    <Wrapper>\n      <StyledText>\n        <Typography type=\"secondary\">Участники: {data.length}</Typography>\n      </StyledText>\n      <StyledList>\n        <List>\n          {data.map(item => (\n            <ListItem key={item.name}>\n              <StyledListItem>\n                <Avatar shape=\"square\" icon={<PermIdentityOutlinedIcon />} />\n                <ListItemText>{item.name}</ListItemText>\n                <Badge count={item.count} showZero />\n              </StyledListItem>\n            </ListItem>\n          ))}\n        </List>\n      </StyledList>\n      <StyledText>\n        <Typography type=\"secondary\">Мафиози в игре: {countMafia()}</Typography>\n      </StyledText>\n    </Wrapper>\n  );\n};\n\nexport default UserList;\n\nconst Wrapper = styled.div`\n  /* width: 100%; */\n  height: 80vh;\n  overflow-y: scroll;\n  flex-grow: 1;\n`;\n\nconst StyledText = styled.div`\n  text-align: left;\n  padding: 0.5em 0;\n`;\n\nconst StyledList = styled.ul`\n  li {\n    padding-left: 0;\n  }\n`;\n\nconst StyledListItem = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 1em;\n`;\n\nconst ListItemText = styled.div`\n  width: 70%;\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n","import styled from 'styled-components';\n\n// === material-ui ===\nimport { Tab, TextField, Button, Typography, Avatar } from '@material-ui/core';\nimport { TabPanel } from '@material-ui/lab';\nimport ThumbUpOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined';\nimport ThumbDownOutlinedIcon from '@material-ui/icons/ThumbDownAltOutlined';\nimport PermIdentityOutlinedIcon from '@material-ui/icons/PermIdentityOutlined';\n\n// === utils ===\nimport { useState } from 'react';\n\nconst Chat = ({ chatMessages, addMessage }) => {\n  const initialPanes = [\n    { title: 'Общий чат', key: '1' },\n    { title: 'Логово мафии', key: '2' },\n  ];\n\n  const [messageValue, changeMessage] = useState('');\n\n  const onChangeMessage = event => {\n    const text = event.target.value;\n    changeMessage(text);\n  };\n\n  const sendMessage = () => {\n    addMessage(messageValue);\n    changeMessage('');\n  };\n\n  const pressEnter = event => {\n    if (event.shiftKey && event.key === 'Enter') return;\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      sendMessage();\n    }\n  };\n\n  return (\n    <ChatWrapper>\n      <Tab type=\"editable-card\">\n        {initialPanes.map(({ title, key, closable, content }) => (\n          <TabPanel tab={title} key={key} closable={closable}>\n            {content}\n          </TabPanel>\n        ))}\n      </Tab>\n\n      <ChatMessagesComponent {...{ chatMessages }} />\n\n      <ChatMoves>\n        <Typography type=\"secondary\">Дадим мафии договориться</Typography>\n        <Typography type=\"secondary\">\n          Следующий ход через: 2 мин 40 сек\n        </Typography>\n      </ChatMoves>\n\n      <ChatForm>\n        <TextField\n          fullWidth\n          variant=\"filled\"\n          label=\"Введите сообщение\"\n          size=\"small\"\n          value={messageValue}\n          onChange={onChangeMessage}\n          onKeyPress={pressEnter}\n        />\n        <Button type=\"primary\" size=\"large\" onClick={sendMessage}>\n          Отправить\n        </Button>\n      </ChatForm>\n    </ChatWrapper>\n  );\n};\n\nconst ChatMessagesComponent = ({ chatMessages }) => {\n  return (\n    <ChatMessages>\n      {chatMessages.map(user => (\n        <ChatItem key={user.id}>\n          {user.avatar ? (\n            <Avatar shape=\"square\" src={user.avatar} />\n          ) : (\n            <Avatar shape=\"square\" icon={<PermIdentityOutlinedIcon />} />\n          )}\n          <ChatItemMessage>\n            <Typography type=\"secondary\">{user.name}</Typography>\n            <Typography type=\"primary\">{user.text}</Typography>\n            <ChatItemMessageInfo>\n              <ChatItemMessageCtrl>\n                <ThumbUpOutlinedIcon /> {user.likes} <ThumbDownOutlinedIcon />\n                {user.dislikes}\n              </ChatItemMessageCtrl>\n              <ChatItemMessageDate>{user.messageTime}</ChatItemMessageDate>\n            </ChatItemMessageInfo>\n          </ChatItemMessage>\n        </ChatItem>\n      ))}\n    </ChatMessages>\n  );\n};\n\nexport default Chat;\n\nconst ChatWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 80vh;\n  flex-grow: 1;\n`;\n\nconst ChatForm = styled.form`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 1em;\n`;\n\nconst ChatMessages = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 2em;\n  overflow-y: scroll;\n`;\n\nconst ChatItem = styled.div`\n  display: flex;\n  gap: 1em;\n`;\n\nconst ChatItemMessage = styled.div`\n  width: 100%;\n  * {\n    display: block;\n  }\n`;\n\nconst ChatItemMessageInfo = styled.div`\n  margin-top: 1em;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst ChatItemMessageCtrl = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1em;\n\n  svg {\n    cursor: pointer;\n\n    &:hover {\n      fill: blue;\n    }\n  }\n`;\n\nconst ChatItemMessageDate = styled.div``;\n\nconst ChatMoves = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  margin: 1em;\n  font-style: italic;\n`;\n","import styled from 'styled-components';\nimport { LinearProgress } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst Game = ({ game }) => {\n  const date =\n    game.date.getDate() +\n    '.' +\n    (game.date.getMonth() + 1) +\n    ' ' +\n    game.date.getHours() +\n    ':' +\n    game.date.getMinutes();\n\n  return (\n    <Container>\n      <FirstLine>\n        <div>\n          <Date>{date}</Date>\n          <Title>{game.name}</Title>\n          <MaxPlayers>Максимальное количество игроков: {game.size}</MaxPlayers>\n        </div>\n        <div>\n          <span>Ожидает {game.size - game.players.length} участников</span>\n          <IconWrapper>\n            <AddIcon />\n          </IconWrapper>\n        </div>\n      </FirstLine>\n      <LinearProgress\n        variant=\"determinate\"\n        value={(game.players.length / game.size) * 100}\n        valueBuffer={55}\n      />\n    </Container>\n  );\n};\n\nconst FirstLine = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n\n  div > * {\n    vertical-align: middle;\n    display: inline-block;\n  }\n`;\n\nconst Date = styled.span`\n  padding-right: 10px;\n`;\nconst Title = styled.span`\n  padding-right: 10px;\n`;\nconst MaxPlayers = styled.span`\n  padding-left: 10px;\n`;\n\nconst IconWrapper = styled.div``;\n\nconst Container = styled.div`\n  width: 100%;\n  font-size: 13px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding-top: 15px;\n  padding-bottom: 15px;\n`;\n\nexport default Game;\n","// Небольшой шаблон, как примерно пишутся редьюсеры, экшены, санки.\n\nconst SET_USER_DATA = 'game/SET_USER_DATA';\nconst SET_IS_FETCHING = 'game/SET_IS_FETCHING';\nconst SET_GAMES_LIST = 'game/SET_GAMES_LIST';\n\n// const SET_CAPTCHA = 'auth/SET_CAPTCHA';\n\n/**\n * Game = {\n *\n * }\n */\n\nconst getInitialGame = () => {\n  const id = Math.random();\n  const size = (5 + id * 20) ^ 0;\n\n  return {\n    id,\n    name: 'Game name ' + ((id * 1000) ^ 0),\n    date: new Date(),\n    size,\n    players: [\n      {\n        name: 'Lupusregina[beta]',\n        id: Math.random(),\n      },\n      {\n        name: 'Den Ri',\n        id: Math.random(),\n      },\n      {\n        name: 'Зомби Ich bin Roboter',\n        id: Math.random(),\n      },\n      {\n        name: 'Bunk Bunkovich',\n        id: Math.random(),\n      },\n      {\n        name: 'Aleksander irreligious86',\n        id: Math.random(),\n      },\n      {\n        name: 'Anton Miroshnichenko',\n        id: Math.random(),\n      },\n      {\n        name: 'Ilya Kozyura',\n        id: Math.random(),\n      },\n      {\n        name: 'Chingiz Mamyev',\n        id: Math.random(),\n      },\n      {\n        name: 'pacificescape',\n        id: Math.random(),\n      },\n    ].slice(0, size),\n    status: 9 < size ? 1 : 0, // 1 - open, 0 -- close ???\n  };\n};\n\nlet initialState = {\n  lobby: [],\n  currentGame: {},\n  theme: {},\n};\n\nconst gameReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_GAMES_LIST: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case SET_IS_FETCHING: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\n/**\n * Actions\n */\n\n// хз как лучше типы описывать, но в редьюсерах совсем без них будет боль, мб их на тс писать?\n\n/**\n * @param {Number} userId\n * @param {String} email\n * @param {String} login\n * @param {Boolean} isAuth\n */\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n  type: SET_USER_DATA,\n  payload: { userId, email, login, isAuth },\n});\n\n/**\n * type setIsAuthType = {\n * type: typeof SET_GAMES_LIST,\n * isAuth: boolean\n * }\n */\n\nexport const setGamesList = lobby => ({\n  type: SET_GAMES_LIST,\n  payload: { lobby },\n});\n\n/**\n * type setIsFetchingType = {\n * type: typeof SET_IS_FETCHING,\n * isFetching: boolean\n * }\n */\n\nexport const setIsFetching = isFetching => ({\n  type: SET_IS_FETCHING,\n  payload: { isFetching },\n});\n\n/**\n * Thunks. Вся асинхронщина тут.\n */\n\nconst sleep = ms => new Promise(r => setTimeout(r, ms));\n\nexport const getGameListThunk = (page = 0) => async dispatch => {\n  dispatch(setIsFetching(true));\n  await sleep(1 * 1e3);\n\n  const games = Array(10).fill(null).map(getInitialGame);\n\n  dispatch(setGamesList(games));\n  dispatch(setIsFetching(false));\n};\n\nexport default gameReducer;\n","import { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useQuery } from '@apollo/react-hooks'\n\n// === material-ui ===\nimport { Button, List, ListItem, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\n// === components ===\nimport Game from './GameInLobby';\n\n// === thunks ===\nimport { getGameListThunk } from 'src/redux/reducers/game_reducer';\n// import * as getChatMessagesQuery from './getChatMessagesQuery.graphql'\nimport gql from 'graphql-tag';\n\nconst query = gql`\n  query getChatMessagesQuery {\n      messages {\n        time\n        text\n    }\n  }\n`\n\nconst Lobby = () => {\n  const dispatch = useDispatch();\n  const lobby = useSelector(state => state.Game.lobby);\n\n  // graphQL\n\n  const { data, loading } = useQuery(query)\n\n  console.log(loading)\n\n  const getGamesList = useCallback(\n    groupId => {\n      dispatch(getGameListThunk(groupId));\n    },\n    [dispatch],\n  );\n\n  if (!lobby.length) {\n    console.log('lobby is emty');\n    getGamesList();\n  }\n\n  const games = lobby.map(game => {\n    return (\n      <ListItem dense={true} divider={true} key={game.id}>\n        <Game game={game} />\n      </ListItem>\n    );\n  });\n\n  return (\n    <>\n      <TitleWrapper>\n        <Typography variant=\"h6\">Текущие игры</Typography>\n      </TitleWrapper>\n      <List>{games}</List>\n      <ButtonWrapper>\n        <Button color=\"primary\" variant=\"contained\">\n          Создать\n        </Button>\n      </ButtonWrapper>\n\n      <div>\n        {data ? data.messages.map(v => (<><p>{v.time}</p><p>{v.text}</p><br></br></>)) : 'loading'}\n      </div>\n\n    </>\n  );\n};\n\nconst ButtonWrapper = styled('div')({\n  width: '100%',\n  margin: '10px 0',\n  display: 'flex',\n  justifyContent: 'flex-end',\n});\n\nconst TitleWrapper = styled('div')({\n  padding: '16px',\n});\n\nexport default Lobby;\n","// Тут будет обращение к апи\n\nimport axios from 'axios';\nimport * as chatMessagesData from './emulation_request/chat_data.json';\n\naxios.create({\n  baseURL: 'base-api-url',\n});\n\nexport const chatAPI = {\n  getChatMessages() {\n    return chatMessagesData.default;\n  },\n};\n","import { chatAPI } from 'src/api/api';\n\nconst SET_CHAT_MESSAGES = 'chat/SET_CHAT_MESSAGES';\nconst SET_IS_FETCHING = 'chat/SET_IS_FETCHING';\nconst ADD_MESSAGE = 'chat/ADD_MESSAGE';\n\nlet initialState = {\n  chatMessages: [],\n  isFetching: false,\n};\n\nconst chatReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CHAT_MESSAGES: {\n      return {\n        ...state,\n        chatMessages: [...state.chatMessages, ...action.chatMessages],\n      };\n    }\n    case SET_IS_FETCHING: {\n      return {\n        ...state,\n        isFetching: action.isFetching,\n      };\n    }\n    case ADD_MESSAGE: {\n      return {\n        ...state,\n        chatMessages: [\n          ...state.chatMessages,\n          {\n            id: state.chatMessages.length + 1,\n            avatar:\n              'https://www.myinstants.com/media/instants_images/van-darkholme.jpg.pagespeed.ce.vKDHBPAGKh.jpg',\n            name: 'Van',\n            text: action.message,\n            likes: 0,\n            dislikes: 0,\n            messageTime: '06 Ноября 17:38',\n          },\n        ],\n      };\n    }\n    default:\n      return state;\n  }\n};\n\n// Actions\n\nexport const setChatMessages = chatMessages => ({\n  type: SET_CHAT_MESSAGES,\n  chatMessages,\n});\nexport const setIsFetching = isFetching => ({\n  type: SET_IS_FETCHING,\n  isFetching,\n});\nexport const addMessage = message => ({ type: ADD_MESSAGE, message });\n\n// Thunks\n\nexport const getChatMessagesThunk = (time = 1000) => async dispatch => {\n  const sleep = ms => new Promise(r => setTimeout(r, ms));\n\n  dispatch(setIsFetching(true));\n  await sleep(time);\n  const chatMessagesData = chatAPI.getChatMessages();\n  dispatch(setChatMessages(chatMessagesData));\n  dispatch(setIsFetching(false));\n};\n\nexport default chatReducer;\n","export const getChatMessages = state => state.Chat.chatMessages;\n","import { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  addMessage,\n  getChatMessagesThunk,\n} from 'src/redux/reducers/chat_reducer';\nimport { getChatMessages } from 'src/redux/reducers/chat_selectors';\nimport Chat from './Chat';\n\nconst ChatContainer = ({ chatMessages, getChatMessagesThunk, addMessage }) => {\n  useEffect(() => {\n    getChatMessagesThunk();\n  }, []);\n\n  return <Chat {...{ chatMessages, addMessage }} />;\n};\n\nconst mapDispatchToProps = state => ({\n  chatMessages: getChatMessages(state),\n});\n\nexport default connect(mapDispatchToProps, {\n  getChatMessagesThunk,\n  addMessage,\n})(ChatContainer);\n","// === components ===\nimport { Main } from 'src/components';\n\nconst HomePage = () => {\n  return <Main />;\n};\n\nexport default HomePage;\n","const Page404 = () => {\n  return <>404</>;\n};\n\nexport default Page404;\n","// === components ===\nimport { Rules } from 'src/components';\n\nconst GameRulesPage = () => {\n  return <Rules />;\n};\n\nexport default GameRulesPage;\n","const WatchGamePage = () => {\n  return <>Watch Game</>;\n};\n\nexport default WatchGamePage;\n","// === material-ui ===\nimport { Box, Link } from '@material-ui/core';\n\n// === components ===\nimport { Layout } from 'src/components';\n\nconst ContactsPage = () => {\n  return (\n    <Layout>\n      <Box textAlign=\"center\">\n        <Box fontSize=\"h4.fontSize\">Contacts</Box>\n\n        <Link href=\"https://github.com/ReSenpai/mafia-game\">GitHub</Link>\n      </Box>\n    </Layout>\n  );\n};\n\nexport default ContactsPage;\n","const ForgottenPasswordPage = () => {\n  return <>forgotten-password</>;\n};\n\nexport default ForgottenPasswordPage;\n","import styled from 'styled-components';\n\n// === components ===\nimport { UserList, Layout, ChatContainer } from '../../components';\n\nconst GamePage = () => {\n  return (\n    <Layout>\n      <GameRoom>\n        <ChatContainer />\n        <UserList />\n      </GameRoom>\n    </Layout>\n  );\n};\n\nexport default GamePage;\n\nconst GameRoom = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  flex-wrap: wrap;\n  gap: 4em;\n`;\n","const CurrentGamesPage = () => {\n  return <>CurrentGames</>;\n};\n\nexport default CurrentGamesPage;\n","// === components ===\nimport { Lobby, Layout } from '../../components';\n\nconst GamePage = () => {\n  return (\n    <Layout>\n      <Lobby />\n    </Layout>\n  );\n};\n\nexport default GamePage;\n","// === router ===\nimport { Route, Switch } from 'react-router-dom';\n// === components ===\nimport withTheme from 'src/hooks/withTheme';\nimport { HeaderContainer } from 'src/components';\nimport { Paper } from '@material-ui/core';\n// === pages ===\nimport {\n  ContactsPage,\n  CurrentGamesPage,\n  ForgottenPasswordPage,\n  GamePage,\n  GameRulesPage,\n  HomePage,\n  Page404,\n  WatchGamePage,\n  GameLobby,\n} from './pages';\n\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\n\nconst client = new ApolloClient({\n  uri: '/graphql',\n  cache: new InMemoryCache()\n});\n\nconst App = () => {\n  return (\n    <ApolloProvider client={client}>\n      <Paper square>\n        <HeaderContainer />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/game-rules\" component={GameRulesPage} />\n          <Route path=\"/watch-game\" component={WatchGamePage} />\n          <Route path=\"/lobby\" component={GameLobby} />\n          <Route path=\"/contacts\" component={ContactsPage} />\n          <Route path=\"/forgotten-password\" component={ForgottenPasswordPage} />\n          <Route path=\"/game\" component={GamePage} />\n          <Route path=\"/current-games\" component={CurrentGamesPage} />\n          <Route path=\"*\" component={Page404} />\n        </Switch>\n      </Paper>\n    </ApolloProvider>\n  );\n};\n\nexport default withTheme(App);\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// Небольшой шаблон, как примерно пишутся редьюсеры, экшены, санки.\n\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\nconst SET_IS_AUTH = 'auth/SET_IS_AUTH';\nconst SET_IS_FETCHING = 'auth/SET_IS_FETCHING';\n// const SET_CAPTCHA = 'auth/SET_CAPTCHA';\n\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false,\n  isFetching: false,\n  captcha: null,\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case SET_IS_AUTH: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case SET_IS_FETCHING: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\n/**\n * Actions\n */\n\n// хз как лучше типы описывать, но в редьюсерах совсем без них будет боль, мб их на тс писать?\n// Можно хотя бы в jsdoc писать :)\n\n/**\n * @param {Number} userId\n * @param {String} email\n * @param {String} login\n * @param {Boolean} isAuth\n */\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n  type: SET_USER_DATA,\n  payload: { userId, email, login, isAuth },\n});\n\n/**\n * type setIsAuthType = {\n * type: typeof SET_IS_AUTH,\n * isAuth: boolean\n * }\n */\n\nexport const setIsAuth = isAuth => ({\n  type: SET_IS_AUTH,\n  payload: { isAuth },\n});\n\n/**\n * type setIsFetchingType = {\n * type: typeof SET_IS_FETCHING,\n * isFetching: boolean\n * }\n */\n\nexport const setIsFetching = isFetching => ({\n  type: SET_IS_FETCHING,\n  payload: { isFetching },\n});\n\n/**\n * Thunks. Вся асинхронщина тут.\n */\n\nexport const getAuthUserDataThunk = (time = 8000) => async dispatch => {\n  const sleep = ms => new Promise(r => setTimeout(r, ms));\n\n  dispatch(setIsFetching(true));\n  await sleep(time);\n  console.log('getAuthUserDataThunk');\n  dispatch(setIsFetching(false));\n\n  dispatch(setIsAuth(true));\n};\n\nexport default authReducer;\n","import { combineReducers } from 'redux';\nimport authReducer from './auth_reducer';\nimport gamesReducer from './game_reducer';\nimport chatReducer from './chat_reducer';\n\n/**\n * Connect the reducers here\n */\n\nexport default combineReducers({\n  Auth: authReducer,\n  Game: gamesReducer,\n  Chat: chatReducer,\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport rootReducer from './reducers';\n\n/**\n * Develop tool helper.\n */\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunkMiddleware)),\n);\n\nexport default store;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\n\n// === router ===\nimport { BrowserRouter } from 'react-router-dom';\n\n// === styles ===\n// import 'normalize.css';\nimport './index.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// === redux ===\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}